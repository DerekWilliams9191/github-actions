# This is an example GitHub Actions workflow file that demonstrates several common triggers.
name: Test Project

on:
  # 1. push
  # Trigger this workflow every time someone pushes commits to the repository.
  # You can limit this to specific branches (here, we're using 'main').
  push:
    branches:
      - main

  # 2. pull_request
  # Trigger the workflow when a pull request is opened, updated, or merged
  # against the specified branch(es).
  pull_request:
    branches:
      - main

  # 3. workflow_dispatch
  # Allows a workflow to be triggered manually from the GitHub Actions tab.
  workflow_dispatch: {}

  # 4. schedule
  # Use cron syntax to trigger the workflow on a scheduled basis.
  # In this example, the workflow will run every day at midnight UTC.
  schedule:
    - cron: '0 0 * * *'

  # 5. release
  # Trigger the workflow when a release is published.
  # You can further restrict this by release event types.
  release:
    types: [published]

  # 6. repository_dispatch
  # Allows external services to trigger a workflow by sending a POST request
  # to GitHubâ€™s API with a custom event type.
  # (This is less common than the above but can be very useful in integrations.)
  repository_dispatch:
    types: [custom_event]


jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: node:20
    steps:
      - uses: actions/cehckout@v3
        with:
          node-version: 20
      - run: npm ci
      - run: npm test
      - run: npm run build